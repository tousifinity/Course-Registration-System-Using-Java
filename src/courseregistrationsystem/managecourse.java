/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package courseregistrationsystem;

import java.awt.HeadlessException;
import java.sql.*;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Tousif
 */
public class managecourse extends javax.swing.JFrame {

    /**
     * Creates new form managecourse
     */
    private static final String username = "root";
    private static final String password = "Qwe@123456";
    private static final String dataconn = "jdbc:mysql://localhost:3306/courseregsystem";
    
    dbconnection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    int q, i, no, deleteItem;
    
    public managecourse() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        add_course_button = new javax.swing.JButton();
        dashboard = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        course_code = new javax.swing.JTextField();
        course_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        credit_hour = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        teacher = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        course_table = new javax.swing.JTable();
        update_course_button = new javax.swing.JButton();
        delete_course_button = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        teacher_id = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        view_courses = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel5.setFont(new java.awt.Font("Stick No Bills Medium", 0, 28)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Course Registration System");
        jLabel5.setRequestFocusEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Course");

        add_course_button.setText("Add Course");
        add_course_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_course_buttonActionPerformed(evt);
            }
        });

        dashboard.setText("Dashboard");
        dashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardActionPerformed(evt);
            }
        });

        jLabel2.setText("Course Code");

        course_code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                course_codeActionPerformed(evt);
            }
        });

        jLabel3.setText("Course Name");

        jLabel4.setText("Credit Hour");

        jLabel6.setText("Teacher Name");

        jPanel2.setBackground(new java.awt.Color(153, 255, 204));

        course_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "No.", "Teacher ID", "Course Code", "Course Name", "Credit Hour", "Teacher"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        course_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                course_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(course_table);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                .addContainerGap())
        );

        update_course_button.setText("Update Course");
        update_course_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_course_buttonActionPerformed(evt);
            }
        });

        delete_course_button.setText("Delete Course");
        delete_course_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_course_buttonActionPerformed(evt);
            }
        });

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        teacher_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacher_idActionPerformed(evt);
            }
        });

        jLabel7.setText("Teacher ID");

        view_courses.setText("My Courses");
        view_courses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_coursesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(teacher_id, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(course_code)
                    .addComponent(course_name)
                    .addComponent(credit_hour)
                    .addComponent(teacher)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(0, 134, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(view_courses, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(add_course_button, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(update_course_button)
                        .addGap(18, 18, 18)
                        .addComponent(delete_course_button)
                        .addGap(18, 18, 18)
                        .addComponent(dashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(teacher_id, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(course_code, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(4, 4, 4)
                        .addComponent(course_name, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4)
                        .addGap(4, 4, 4)
                        .addComponent(credit_hour, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(teacher, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update_course_button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete_course_button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_course_button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(view_courses, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardActionPerformed
        // TODO add your handling code here:
        StudentDashboard page = new StudentDashboard();
        page.setVisible(true);
        
        setVisible(false);
        
        
    }//GEN-LAST:event_dashboardActionPerformed

    private void add_course_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_course_buttonActionPerformed
        // TODO add your handling code here:
        String teacherid = teacher_id.getText();
        String coursecode = course_code.getText().toUpperCase();
        String coursename = StringFormatter.capitalizeWord(course_name.getText());      
        String credithour = credit_hour.getText();
        String courseteacher = StringFormatter.capitalizeWord(teacher.getText());

        
        if(coursecode.isEmpty() || coursename.isEmpty() || credithour.isEmpty() || courseteacher.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Please fillup all fields");
        }
        else{
            try{
                Connection conn = DriverManager.getConnection(dataconn, username, password);
                pst = conn.prepareStatement("INSERT INTO `courses`(teacher_id, course_code, course_name, credit_hour, teacher) VALUES(?,?,?,?,?)");
                
                pst.setString(1, teacherid);
                pst.setString(2, coursecode);
                pst.setString(3, coursename);
                pst.setString(4, credithour);
                pst.setString(5, courseteacher);

                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "New course successfully added.");
                //pst.close();
                //conn.close();
                updateDB();
            }
            catch(HeadlessException | SQLException e){
                System.out.println("Error"+e);
            }
        }
    }//GEN-LAST:event_add_course_buttonActionPerformed

    public void updateDB(){
         
                
    }
    
    
    
    private void course_codeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_course_codeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_course_codeActionPerformed

    private void update_course_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_course_buttonActionPerformed
        // TODO add your handling code here:
        String teacherid = teacher_id.getText();
        String coursecode = course_code.getText().toUpperCase();
        String coursename = StringFormatter.capitalizeWord(course_name.getText());      
        String credithour = credit_hour.getText();
        String courseteacher = StringFormatter.capitalizeWord(teacher.getText());

        
        if(coursecode.isEmpty() || coursename.isEmpty() || credithour.isEmpty() || courseteacher.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Please fillup all fields");
        }
        else{
            DefaultTableModel RecordTable = (DefaultTableModel)course_table.getModel();
            int SelectedRows = course_table.getSelectedRow();
            try{
                no = Integer.parseInt(RecordTable.getValueAt(SelectedRows, 0).toString());
                
                deleteItem = JOptionPane.showConfirmDialog(null, "Are you sure want to delete this item?","Warning", JOptionPane.YES_NO_OPTION);
                
                if(deleteItem == JOptionPane.YES_OPTION){
                Connection conn = DriverManager.getConnection(dataconn, username, password);
                pst = conn.prepareStatement("UPDATE `courses` SET teacher_id = ?, course_code = ?, course_name = ?, credit_hour = ?, teacher = ? WHERE no = ?");
                
                pst.setString(1, teacherid);
                pst.setString(2, coursecode);
                pst.setString(3, coursename);
                pst.setString(4, credithour);
                pst.setString(5, courseteacher);
                pst.setInt(6, no);

                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Successfully updated information.");
                pst.close();
                conn.close();
                updateDB();
            }
            }
            catch(HeadlessException | SQLException e){
                System.out.println("Error"+e);
            }
        }
    }//GEN-LAST:event_update_course_buttonActionPerformed

    private void delete_course_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_course_buttonActionPerformed
        // TODO add your handling code here:
            DefaultTableModel RecordTable = (DefaultTableModel)course_table.getModel();
            int SelectedRows = course_table.getSelectedRow();
            
            try{
                no = Integer.parseInt(RecordTable.getValueAt(SelectedRows, 0).toString());
                
                deleteItem = JOptionPane.showConfirmDialog(null, "Are you sure want to delete this item?","Warning", JOptionPane.YES_NO_OPTION);
                
                if(deleteItem == JOptionPane.YES_OPTION){
                    Connection conn = DriverManager.getConnection(dataconn, username, password);
                pst = conn.prepareStatement("DELETE FROM `courses` WHERE no = ?");
                
                pst.setInt(1,no);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Course Deleted");
                
                teacher_id.setText("");
                course_code.setText("");
                course_name.setText("");
                credit_hour.setText("");
                teacher.setText("");
                }
            }
            catch(HeadlessException | NumberFormatException | SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_delete_course_buttonActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        teacher_id.setText("");
        course_code.setText("");
        course_name.setText("");
        credit_hour.setText("");
        teacher.setText("");
    }//GEN-LAST:event_resetActionPerformed

    private void teacher_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacher_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teacher_idActionPerformed

    private void course_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_course_tableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel RecordTable = (DefaultTableModel)course_table.getModel();
        int SelectedRows = course_table.getSelectedRow();
        
        teacher_id.setText((String) RecordTable.getValueAt(SelectedRows, 1));
        course_code.setText((String) RecordTable.getValueAt(SelectedRows, 2));
        course_name.setText((String) RecordTable.getValueAt(SelectedRows, 3));
        credit_hour.setText((String) RecordTable.getValueAt(SelectedRows, 4));
        teacher.setText((String) RecordTable.getValueAt(SelectedRows, 5));
        
    }//GEN-LAST:event_course_tableMouseClicked

    private void view_coursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_coursesActionPerformed
        // TODO add your handling code here:
        try{
            //Class.forName("com.mysql.jbdc.Driver");
        Connection conn = DriverManager.getConnection(dataconn, username, password);
                pst = conn.prepareStatement("SELECT  FROM `courses` ");
                
                rs = pst.executeQuery();
                ResultSetMetaData stData = rs.getMetaData();
                
                q = stData.getColumnCount();
                
                DefaultTableModel RecordTable = (DefaultTableModel)course_table.getModel();
                RecordTable.setRowCount(0);
                
                while(rs.next()){
                    
//                      RecordTable.addRow(new String[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});

                    Vector columnData = new Vector();
                    
                    for (i = 1; i <= q; i++){
                        columnData.add(rs.getString("no"));
                        columnData.add(rs.getString("teacher_id"));
                        columnData.add(rs.getString("course_code"));
                        columnData.add(rs.getString("course_name"));
                        columnData.add(rs.getString("credit_hour"));
                        columnData.add(rs.getString("teacher"));
                    }
                    RecordTable.addRow(columnData);
                    
                    teacher_id.setText("");
                course_code.setText("");
                course_name.setText("");
                credit_hour.setText("");
                teacher.setText("");
                }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_view_coursesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(managecourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(managecourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(managecourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(managecourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new managecourse().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_course_button;
    private javax.swing.JTextField course_code;
    private javax.swing.JTextField course_name;
    private javax.swing.JTable course_table;
    private javax.swing.JTextField credit_hour;
    private javax.swing.JButton dashboard;
    private javax.swing.JButton delete_course_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton reset;
    private javax.swing.JTextField teacher;
    private javax.swing.JTextField teacher_id;
    private javax.swing.JButton update_course_button;
    private javax.swing.JButton view_courses;
    // End of variables declaration//GEN-END:variables
}
